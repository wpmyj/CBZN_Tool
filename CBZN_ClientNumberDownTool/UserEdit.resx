<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="l_Title.Locked" type="System.Boolean, mscorlib, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089">
    <value>True</value>
  </metadata>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAEAIACoEAAAFgAAACgAAAAgAAAAQAAAAAEAIAAAAAAAABAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA/v7/AP39/gD///8A////AP///wD///8A////AP///wD///8A////AP//
        /wD///8A////AP///wD///8A5OT5ACkpywAAAMAAAADBAAAAwQAAAMEAAADBAAAAwQAAAMEAAADBAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABpadsA////Nv///1////9d////XP///1v///9a////Wf//
        /1f///9W////Vf///1T///9U////Uv///1L5+f46eHjeCQAAvgUAAMEFAADBBQAAwQUAAMEFAADBAAAA
        wQAAAMEAAADBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAuBDf3/ep////+f////b////1////9f//
        //X////1////9P////T////0////9P////T////z////9MnJ8tQUFMaRAADBjAAAwYwAAMGMAADBjAAA
        wYsAAMFsAADBHAAAwQAAAMEAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAADAcamp6vP/////////////
        ////////////////////////////////////////////////////////p6fq/wsLxP8AAMH/AADB/wAA
        wf8AAMH/AADB/wAAwf0AAMGPAADBBwAAwQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAMGtpqbq////
        //////////////////////////////Ly+v/4+Pz///////////////////////////+goOj/CQnD/wAA
        wf8AAMH/AADB/wAAwf8AAMH/AADB/wAAwcoAAMESAADBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAcH
        w7GsrOv////////////////////////////r6/b/j4+4/83N4f///////////////////////////5mZ
        5/8ICMP/AADB/wAAwf8AAMH/AADB/wAAwf8AAMH/AADBzQAAwRIREbEAZGRkAGRkZABkZGQAZGRkAAAA
        AAAAAAAACQnDsaio6v//////////////////////9vb+/4iI0f9ZWXH/enqz//Dw/f//////////////
        ////////i4vj/wUFwv8AAMH/AADB/wAAwf8AAMH/AADB/wAAwf8AAMHNAADCEpeXNQJkZGQgZGRkG2Rk
        ZAJkZGQAAAAAAAAAAAAAAMGxWFjX//Dw+/////////////////+lper/PDyg/2BgZf9JSY3/ra3o////
        /////////////+rq+v9NTdT/AADB/wAAwf8AAMH/AADB/wAAwf8AAMH/AADB/wAAwc0AAMYRampfEmRk
        ZLtkZGSRZGRkCmRkZAAAAAAAAAAAAAAAwbEHB8P/eHje/+vr+v//////zMzz/ygozP8zM4//ZWVj/0BA
        gv9FRc3/5eX5///////i4vj/bGzc/wYGwv8AAMH/AADB/wAAwf8AAMH/AADB/wAAwf8AAMH/AADBzQAA
        yBFoaGAbZGRk7WRkZLJkZGQMZGRkAGRkZABkZGQAAADBsQAAwf8JCcP/SkrT/4yM4/9GRtL/AADB/w8P
        rv9CQoH/FBSo/wUFwv98fN//kZHl/z8/0f8EBML/AADB/wAAwf8AAMH/AADB/wAAwf8AAMH/AADB/wAA
        wf8AAMHNAADIEWdnYR9kZGTrZGRkrWRkZAtkZGQAZGRkBGRkZAMAAMGxAADB/wAAwf8AAMD/BATC/wIC
        wv8oKMv/WFjW/29v1P9SUtX/Hh7J/wYGw/8FBcL/AADA/wAAwf8AAMH/BQXD/wUFw/8FBcP/BgbD/wQE
        w/8AAMH/AADB/wAAwc0AAMgRZ2dhI2RkZOtkZGSqZGRkCmRkZBBkZGR+ZGRkXwAAwbEAAMH/AADB/wAA
        wf8DA8L/XV3Y/9HR9P/7+/7///////j4/v/Dw/D/RkbS/wAAwf8AAMH/AADB/y8v1P9sbOz/bm7t/25u
        7f9vb+3/Zmbq/x0dzf8AAMD/AADBzQAAyRFnZ2InZGRk7GRkZKdkZGQJZGRkImRkZOxkZGSxAADBsQAA
        wf8AAMH/AADA/z090P/h4fj////////////////////////////Pz/P/JCTK/wAAwf8AAMH/JyfR/1xc
        5v9fX+f/Xl7n/19f5/9XV+T/GBjL/wAAwP8AAMHNAADJEWZmYixkZGTtZGRkpGRkZAhkZGQlZGRk62Rk
        ZK0AAMGxAADB/wAAwf8BAcH/eXnf//////////////////////////////////b2/f9dXdj/AADB/wAA
        wf8VFcn/NzfX/zo62P85Odj/OjrY/zMz1v8NDcb/AADB/wAAwc0AAMkRZmZiMGRkZO5kZGShZGRkCGRk
        ZClkZGTrZGRkqgAAwbEAAMH/AADB/wEBwf97e9//////////////////////////////////9/f9/19f
        2P8AAMH/AADB/zk52P98fPL/f3/z/35+8/9/f/T/d3fw/yMjz/8AAMD/AADBzQAAyRFmZmI0ZGRk72Rk
        ZJ5kZGQHZGRkLGRkZOxkZGSoAADBsQAAwf8AAMH/AADA/0FB0f/m5vn/////////////////////////
        ///V1fX/JyfL/wAAwf8AAMH/CgrF/xwczP8dHc3/HR3N/x4ezf8ZGcv/BgbD/wAAwf8AAMHNAADJEWZm
        YjhkZGTwZGRkm2RkZAZkZGQwZGRk7WRkZKUAAMGxAADB/wAAwf8AAMH/BQXC/2dn2v/b2/f/////////
        ///+/v//zc3z/09P1P8BAcH/AADB/wAAwf8AAMH/AADA/wAAwP8AAMD/AADA/wAAwP8AAMH/AADB/wAA
        wc0AAMoRZmZiPGRkZPFkZGSYZGRkBmRkZDNkZGTuZGRkowAAwbEAAMH/AADB/wAAwf8AAMH/AgLB/zIy
        zv9kZNr/eHjf/15e2P8mJsr/AADB/wAAwf8AAMH/AADB/wAAwf8AAMH/AADB/wAAwf8AAMH/AADB/wAA
        wf8AAMH/AADBzQAAyhFmZmNBZGRk8mRkZJVkZGQFZGRkN2RkZO5kZGSgAADBlwAAwf8AAMH/AADB/wAA
        wf8AAMH/AADA/wAAwP8BAcH/AADA/wAAwP8AAMH/AADB/wAAwf8AAMH/AADB/wAAwf8AAMH/AADB/wAA
        wf8AAMH/AADB/wAAwf8AAMG2AADODGVlY0VkZGTzZGRkkmRkZARkZGQ6ZGRk72RkZJ4AAME4AADBuAAA
        wegAAMHpAADB6QAAwekAAMHpAADB6QAAwekAAMHpAADB6QAAwekAAMHpAADB6QAAwekAAMHpAADB6QAA
        wekAAMHpAADB6QAAwekAAMHpAADBywAAwU64uBYAZGRkTWRkZPRkZGSPZGRkBGRkZD5kZGTwZGRkmwAA
        wQAAAMEPAADBHQAAwR8AAMEfAADDHgAAxh0AAMYdAADGHQAAxh0AAMYdAADGHQAAxh0AAMYdAADGHQAA
        xh0AAMYdAADGHQAAxh0AAMYdAADGHQAAxh0AAMkRAAD/AFdXcABkZGRdZGRk+GRkZIxkZGQDZGRkQWRk
        ZPFkZGSZAADBAAAAwQAAAMEAAADBABkZqgBqal4WZmZiOmZmYj1mZmI9ZmZiPWZmYj1mZmI9ZmZiPWZm
        Yj1mZmI9ZmZiPWZmYj1mZmI9ZmZiPWZmYj1mZmI9ZmZiPWZmYj1kZGQ7ZGRkO2RkZJ5kZGT/ZGRkimRk
        ZANkZGRFZGRk8WRkZJcAAAAAAAAAAAAAAAAAAAAAZGRkAGRkZFtkZGTpZGRk8mRkZPFkZGTxZGRk8WRk
        ZPFkZGTxZGRk8WRkZPFkZGTxZGRk8WRkZPFkZGTxZGRk8WRkZPFkZGTxZGRk8WRkZPBkZGTxZGRk+2Rk
        ZP9kZGR6ZGRkAGRkZEhkZGTyZGRklAAAAAAAAAAAAAAAAAAAAABkZGQAZGRkOWRkZJNkZGSYZGRkmGRk
        ZJhkZGSXZGRkl2RkZJdkZGSXZGRkl2RkZJdkZGSXZGRkl2RkZJdkZGSXZGRkl2RkZJdkZGSXZGRkl2Rk
        ZJdkZGSSZGRkfWRkZCZkZGQAZGRkSGRkZPJkZGSSAAAAAAAAAAAAAAAAAAAAAGRkZABkZGQDZGRkB2Rk
        ZAdkZGQHZGRkDWRkZBdkZGQXZGRkF2RkZBdkZGQXZGRkF2RkZBdkZGQXZGRkF2RkZBdkZGQXZGRkF2Rk
        ZBdkZGQXZGRkF2RkZBdkZGQSZGRkD2RkZBVkZGRmZGRk9mRkZJAAAAAAAAAAAAAAAAAAAAAAZGRkAGRk
        ZABkZGQAZGRkAGRkZABkZGRFZGRktWRkZLxkZGS7ZGRku2RkZLtkZGS7ZGRku2RkZLtkZGS7ZGRku2Rk
        ZLtkZGS7ZGRku2RkZLtkZGS7ZGRku2RkZLxkZGS8ZGRkwWRkZOBkZGT/ZGRkiwAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAZGRkAGRkZFBkZGTRZGRk2WRkZNlkZGTZZGRk2WRkZNlkZGTZZGRk2WRk
        ZNlkZGTZZGRk2WRkZNlkZGTZZGRk2WRkZNlkZGTZZGRk2WRkZNlkZGTYZGRk1GRkZMNkZGRQAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAABkZGQAZGRkEGRkZCpkZGQrZGRkK2RkZCtkZGQrZGRkK2Rk
        ZCtkZGQrZGRkK2RkZCtkZGQrZGRkK2RkZCtkZGQrZGRkK2RkZCtkZGQrZGRkK2RkZCtkZGQpZGRkHGRk
        ZAQAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGRkZABkZGQAZGRkAGRkZABkZGQAZGRkAGRk
        ZABkZGQAZGRkAGRkZABkZGQAZGRkAGRkZABkZGQAZGRkAGRkZABkZGQAZGRkAGRkZABkZGQAZGRkAGRk
        ZABkZGQAZGRkAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        AAAAAAAAAAAAAAAAAAAAAAAA//////////8AAAB/AAAAPwAAAD8AAAA/AAAAPwAAAAMAAAADAAAAAwAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA8AAAAPAA
        AADwAAAA8AAAAP8AAAD/AAAA/wAAAP////8=
</value>
  </data>
</root>